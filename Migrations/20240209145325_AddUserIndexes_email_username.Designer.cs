// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posterr.api.Data;

#nullable disable

namespace Posterr.api.Migrations
{
    [DbContext(typeof(PosterrDbContext))]
    [Migration("20240209145325_AddUserIndexes_email_username")]
    partial class AddUserIndexes_email_username
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Posterr.api.Data.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(777)
                        .HasColumnType("nvarchar(777)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Posterr.api.Data.Models.Repost", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RepostedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("Reposts");
                });

            modelBuilder.Entity("Posterr.api.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c7e6d15-b97e-4076-b1a4-8d5de0257f0d"),
                            Email = "ross.geller@posterr.com",
                            FirstName = "Ross",
                            LastName = "Geller",
                            UserName = "ross.geller"
                        },
                        new
                        {
                            Id = new Guid("20443dc9-5383-4baa-853a-9ad81a81d5e6"),
                            Email = "monica.geller@posterr.com",
                            FirstName = "Monica",
                            LastName = "Geller",
                            UserName = "monica.geller"
                        },
                        new
                        {
                            Id = new Guid("4d519f73-0225-449d-a6e2-2ee7782ff8a3"),
                            Email = "joey.tribiani@posterr.com",
                            FirstName = "Joey",
                            LastName = "Tribiani",
                            UserName = "joey.tribiani"
                        },
                        new
                        {
                            Id = new Guid("bed94755-a97d-4423-abb6-1a6a6785f387"),
                            Email = "chandler.bing@posterr.com",
                            FirstName = "Chandler",
                            LastName = "Bing",
                            UserName = "chandler.bing"
                        });
                });

            modelBuilder.Entity("Posterr.api.Data.Models.Post", b =>
                {
                    b.HasOne("Posterr.api.Data.Models.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Posterr.api.Data.Models.Repost", b =>
                {
                    b.HasOne("Posterr.api.Data.Models.Post", "Post")
                        .WithMany("Reposts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Posterr.api.Data.Models.User", "User")
                        .WithMany("Reposts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Posterr.api.Data.Models.Post", b =>
                {
                    b.Navigation("Reposts");
                });

            modelBuilder.Entity("Posterr.api.Data.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Reposts");
                });
#pragma warning restore 612, 618
        }
    }
}
